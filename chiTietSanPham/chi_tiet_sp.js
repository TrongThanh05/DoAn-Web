// Nh·∫≠n d·ªØ li·ªáu t·ª´ trang tr∆∞·ªõc ƒë√≥
// L·∫•y query t·ª´ URL
const params = new URLSearchParams(window.location.search);
const type = params.get('type');
const id = params.get('id');
console.log(type, id); // "shirt", "123"

// L·∫•y object s·∫£n ph·∫©m theo type v√† id
function getDataByIdAndType() {
  if (type === 'shirts') {
    return shirts.find((shirt) => shirt.id == id);
  }
  if (type === 'pants') {
    return pants.find((pants) => pants.id == id);
  }
  if (type === 'shoes') {
    return shoes.find((shoes) => shoes.id == id);
  }
}
const productObject = getDataByIdAndType();
console.log(productObject);

// Th√™m ·∫£nh s·∫£n ph·∫©m
const mainImage = document.getElementById('mainImage'); // ·∫¢nh l·ªõn
const subImageStock = document.getElementById('subImageStock'); //Kho ·∫£nh nh·ªè d∆∞·ªõi ·∫£nh l·ªõn
function renderImages() {
  mainImage.setAttribute('src', productObject.images[0]);
  mainImage.setAttribute('alt', productObject.name);

  for (let i = 1; i < productObject.images.length; i++) {
    let subImageHtml = '';
    subImageHtml = `<img src="${productObject.images[i]}" alt="" />`;
    subImageStock.insertAdjacentHTML('beforeend', subImageHtml);
  }
}
renderImages();
// T·∫°o h√†m th√™m ph·∫ßn th√¥ng tin v√† ch·ª©c nƒÉng s·∫£n ph·∫©m
const productInformation = document.getElementById('productInformation');
function renderProductInfor() {
  productInformation.innerHTML = `<div class="product__info-title">
            <h2 id="productName">${productObject.name}</h2>
          </div>
          <p>
            <b>Gi√° :</b>
            <span id="productPrice" class="info-price">${
              productObject.price
            }</span>
          </p>
          <p><b>T√¨nh tr·∫°ng :</b> <span class="info-status">${
            productObject.stock > 0 ? 'C√≤n h√†ng' : 'H·∫øt h√†ng'
          }</span></p>
          <p><b>M√£ :</b> <span class="info-code">${
            productObject.type.toString().toUpperCase() +
            '-' +
            productObject.id.toString().toUpperCase()
          }</span></p>
          <div class="info-promotion">
            <h3>üéÅ KHUY·∫æN M√ÉI - ∆ØU ƒê√ÉI</h3>
            <ul>
              <li>ƒê·ªïi tr·∫£ n·∫øu s·∫£n ph·∫©m l·ªói b·∫•t k√¨</li>
              <li>ƒê·ªìng gi√° ship to√†n qu·ªëc 30k</li>
              <li>Khuy·∫øn m√£i tr·ª±c ti·∫øp tr√™n gi√° s·∫£n ph·∫©m</li>
              <li>H·ªó tr·ª£ tr·∫£ l·ªùi th·∫Øc m·∫Øc qua Fanpage ch√≠nh th·ª©c</li>
            </ul>
          </div>
          <div class="product__info-color">
            <b>M√†u</b>
            <div class="color-box">
              <img 
                src="${productObject.images[0]}"
                class="colorProduct"
              ></img>
              <img
                src="${productObject.images[1]}"
                class="colorProduct"
              ></img>
              <img
                src="${productObject.images[2]}"
                class="colorProduct"
              ></img>
            </div>
          </div>
          <div class="product__info-size">
            <b>Size</b>
            <div class="size-button">
              <button>${productObject.sizes[0]}</button>
              <button>${productObject.sizes[1]}</button>
              <button>${productObject.sizes[2]}</button>
              <button>${productObject.sizes[3]}</button>
            </div>
          </div>
          <div class="product__info-add">
            <div class="add-quantity">
              <button id="descQuantity">-</button>
              <p id="productQuantity">1</p>
              <button id="incrQuantity">+</button>
            </div>
            <button class="add-shoppingCart" id="addShopCart">Th√™m v√†o gi·ªè h√†ng</button>
          </div>
          <button class="info-buyNow" id="buyNow"
            ><b>MUA NGAY</b>
            <span>G·ªçi ƒëi·ªán x√°c nh·∫≠n v√† giao d·ªãch t·∫≠n n∆°i</span></button
          >`;
}
renderProductInfor();
// Th√™m chi ti·∫øt s·∫£n ph·∫©m
const productDetail = document.getElementById('productDetail');
function renderProductDetail() {
  productDetail.innerHTML = `
    <li><strong>Ch·∫•t li·ªáu : </strong>l√¥ng, b√¥ng</li>
    <li><strong>Lo·∫°i da : </strong>da Tr√¢u</li>
    <li><strong>M√¥ t·∫£ : </strong>${productObject.description}</li>
    <li><strong>S·ªë l∆∞·ª£ng t·ªìn kho : </strong>${productObject.stock}</li>
    <li><strong>Xu·∫•t x·ª© : </strong>Vi·ªát Nam</li>
    <li><strong>Th∆∞∆°ng hi·ªáu : </strong>${productObject.brand}</li>
    <li><strong>Ki·ªÉu √°o : </strong>${productObject.category}</li>
    <li><strong>Ch·∫•t l∆∞·ª£ng in : </strong>in l·ª•a d√πng m·ª±c Nh·∫≠t B·∫£n ch·∫•t l∆∞·ª£ng cao</li>
    <li><strong>B·∫£o qu·∫£n : </strong>c√≥ th·ªÉ gi·∫∑t m√°y ho·∫∑c gi·∫∑t tay</li>`;
}
renderProductDetail();

const similarProducts = document.getElementById('similarProducts');
function renderSimilarProducts() {
  const data = {
    shirts,
    pants,
    shoes,
  };
  let name = productObject.type;
  const arrayProductNow = data[name];
  for (let i = 0; i < 4; i++) {
    if (arrayProductNow[i].id == productObject.id) continue;
    else {
      const productHTML = `
      <div class="similarProducts col-12 col-sm-6 col-md-6 col-lg-3"
              
           data-id="${arrayProductNow[i].id}" 
           data-type="${arrayProductNow[i].type}"
          data-price="${arrayProductNow[i].price}">
        <div class="similarProducts__img">
          <a href="../chiTietSanPham/chiTietSanPham.html?type=${
            arrayProductNow[i].type
          }&id=${arrayProductNow[i].id}" class="similarProducts__imgLink">
            <img class="img-fluid" style="width: 150px; height: auto;" src="${
              arrayProductNow[i].images[0]
            }" alt="${arrayProductNow[i].alt}" />
          </a>
        </div>
        <div class="similarProducts__info">
          <h5>4Bros</h5>
          <a href="../chiTietSanPham/chiTietSanPham.html?type=${
            arrayProductNow[i].type
          }&id=${arrayProductNow[i].id}" class="productName">${
        arrayProductNow[i].name
      }</a>
          <p>${arrayProductNow[i].price.toLocaleString('vi-VN') + ' ‚Ç´'}</p>
        </div>
      </div>
    `;
      similarProducts.insertAdjacentHTML('beforeend', productHTML);
    }
  }
}
// renderSimilarProducts();

// X·ª≠ l√Ω s·ª± ki·ªán tƒÉng, gi·∫£m s·ªë l∆∞·ª£ng
const incrQuantity = document.getElementById('incrQuantity');
const descQuantity = document.getElementById('descQuantity');
const productQuantity = document.getElementById('productQuantity');
let quantity = parseInt(productQuantity.textContent) || 0;

incrQuantity.addEventListener('click', () => {
  if (quantity >= 0) {
    quantity++;
    productQuantity.innerText = quantity;
  }
});
descQuantity.addEventListener('click', () => {
  if (quantity > 0) {
    quantity--;
    productQuantity.innerText = quantity;
  }
});

// Th√™m s·∫£n ph·∫©m v√†o localStorage
function addToPayment(Name, Price, Quantity, Img) {
  // L·∫•y gi·ªè h√†ng c·∫ßn tr·∫£ t·ª´ localStorage ho·∫∑c kh·ªüi t·∫°o gi·ªè h√†ng r·ªóng
  paymentProducts = JSON.parse(localStorage.getItem('paymentProducts')) || [];
  // Th√™m s·∫£n ph·∫©m v√†o paymentProducts
  if (Quantity === 0) alert('üîî Vui l√≤ng th√™m s·ªë l∆∞·ª£ng s·∫£n ph·∫©m');
  else {
    paymentProducts.push({
      name: Name,
      price: Price,
      quantityProduct: Quantity,
      img: Img,
    });

    // L∆∞u l·∫°i v√†o localStorage
    localStorage.setItem('paymentProducts', JSON.stringify(paymentProducts));
    // Hi·ªÉn th·ªã th√¥ng b√°o
    alert(`üõí ${Quantity} s·∫£n ph·∫©m: ${Name} ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n ‚úÖ`);
  }
}
// Th√™m v√†o gi·ªè
function addToCart(productName, productPrice, productImg) {
  // L·∫•y gi·ªè h√†ng t·ª´ localStorage ho·∫∑c kh·ªüi t·∫°o gi·ªè h√†ng r·ªóng
  let cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

  // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè ch∆∞a
  const existingProduct = cartItems.find((item) => item.name === productName);

  if (existingProduct) {
    // N·∫øu ƒë√£ c√≥, tƒÉng s·ªë l∆∞·ª£ng
    existingProduct.quantity += 1;
  } else {
    // N·∫øu ch∆∞a c√≥, th√™m s·∫£n ph·∫©m m·ªõi
    cartItems.push({
      name: productName,
      price: productPrice,
      quantity: 1,
      img: productImg,
    });
  }
  // L∆∞u l·∫°i v√†o localStorage
  localStorage.setItem('cartItems', JSON.stringify(cartItems));

  // C·∫≠p nh·∫≠t badge hi·ªÉn th·ªã s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
  // H√†m n√†y ·ªü b√™n header.js v√¨ trang n√†o c≈©ng c√≥ header
  updateCartBadge(cartItems);

  // Hi·ªÉn th·ªã th√¥ng b√°o
  alert(`üõí ${productName} ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng ‚úÖ`);
}

// L·∫Øng nghe s·ª± ki·ªán click tr√™n danh s√°ch s·∫£n ph·∫©m
document
  .getElementById('productInformation')
  .addEventListener('click', (event) => {
    function buyNow() {
      // Ki·ªÉm tra n·∫øu n√∫t th√™m gi·ªè h√†ng ƒë∆∞·ª£c nh·∫•n
      const button = event.target.closest('.info-buyNow');
      if (!button) {
        console.error('not a button');
        return;
      }
      // L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ DOM
      const productItem = button.closest('.main__product-info');
      if (!productItem) {
        console.error('not a product');
        return;
      }
      const Name = productItem.querySelector('#productName')?.innerText;
      const Price = productItem
        .querySelector('#productPrice')
        ?.innerText.replace(/[^\d]/g, '');
      const Img = document.getElementById('mainImage').getAttribute('src');
      const Quantity = parseInt(
        productItem.querySelector('#productQuantity').textContent
      );
      // Ki·ªÉm tra t√™n v√† gi√° c√≥ h·ª£p l·ªá kh√¥ng v√† th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
      if (Name && Price && Quantity && Img) {
        addToPayment(Name, Price, Quantity, Img);
        window.location.href = '../thanhToan/thanhtoan.html';
      } else {
        console.log('not attribute');
      }
    }
    function addToCartBadge() {
      // Ki·ªÉm tra n·∫øu n√∫t th√™m gi·ªè h√†ng ƒë∆∞·ª£c nh·∫•n
      const addCart = event.target.closest('#addShopCart');
      if (!addCart) {
        console.error('not a addCart');
        return;
      }
      // L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ DOM
      const productItem = addCart.closest('.main__product-info');
      if (!productItem) {
        console.error('not a product');
        return;
      }
      const Name = productItem.querySelector('#productName')?.innerText;
      const Price = productItem
        .querySelector('#productPrice')
        ?.innerText.replace(/[^\d]/g, '');
      const Img = productItem.querySelector('img').getAttribute('src');
      // Ki·ªÉm tra t√™n v√† gi√° c√≥ h·ª£p l·ªá kh√¥ng v√† th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
      if (Name && Price && Img) {
        addToCart(Name, Price, Img);
      } else {
        console.log('not attribute');
      }
    }
    buyNow();
    addToCartBadge();
  });
