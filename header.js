// tho√°t kh·ªèi menu ·ªü m√†n h√¨nh mobile
const exitMenu = document.getElementById('exitMenu');
const barIcon = document.getElementById('barIcon');
const headerMenu = document.getElementById('header__menuMobile');
barIcon.addEventListener('click', () => {
  headerMenu.style.display = 'flex';
  headerMenu.style.flexDirection = 'column';
  barIcon.style.display = 'none';
});
exitMenu.addEventListener('click', () => {
  headerMenu.style.display = 'none';
  barIcon.style.display = 'block';
});

// X·ª≠ l√Ω vi·ªác t√≠nh t·ªïng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m v√† c·∫≠p nh·∫≠t badge hi·ªÉn th·ªã. H√†m n√†y ƒë∆∞·ª£c g·ªçi khi th√™m s·∫£n ph·∫©m ho·∫∑c khi t·∫£i trang.
function updateCartBadge(cartItems) {
  const totalQuantity = cartItems.reduce(
    (total, item) => total + item.quantity,
    0
  );
  const cartBadge = document.getElementById('cart-badge');
  if (cartBadge) {
    cartBadge.innerText = totalQuantity;
  }
}

// X·ª≠ l√Ω t·ªïng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m y√™u th√≠ch v√† khi reset trang s·∫Ω c·∫≠p nh·∫≠t
function updateHeartBadge(heartProducts) {
  const totalQuantity = heartProducts.length;

  const heartBadge = document.getElementById('heart-badge');
  if (heartBadge) {
    heartBadge.innerText = totalQuantity;
  }
}

// C·∫≠p nh·∫≠t badge khi trang ƒë∆∞·ª£c t·∫£i
document.addEventListener('DOMContentLoaded', () => {
  const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];
  const heartProducts = JSON.parse(localStorage.getItem('heartProducts')) || [];
  updateCartBadge(cartItems);
  updateHeartBadge(heartProducts);
});

let notificationOfShop;
try {
  notificationOfShop =
    JSON.parse(localStorage.getItem('notificationOfShop')) || [];
} catch (error) {
  console.error('L·ªói khi ƒë·ªçc gi·ªè h√†ng t·ª´ localStorage:', error);
  notificationOfShop = [];
}
let numberOfNoti = 0;

// L·∫•y th√¥ng tin s·∫£n ph·∫©m ƒë√£ thanh to√°n r·ªìi ƒë∆∞a v√†o th√¥ng b√°o.
notificationOfShop.forEach((productPayed) => {
  numberOfNoti++;
  const allNotification = document.querySelector('.allNotification');
  const notice = document.createElement('a');
  notice.classList.add('notification');
  notice.innerHTML = `
  <img src="${productPayed.img}" />
  <div style="display: flex; flex-direction: column; gap: 5px">
    <b>
      B·∫°n v·ª´a ƒë·∫∑t h√†ng s·∫£n ph·∫©m:
      <span id="orderName">${productPayed.name}</span>
      üõí
    </b>
    <p>
      S·ªë l∆∞·ª£ng: x<span id="orderQuantity">${
        productPayed.quantity
      }</span> S·ªë ti·ªÅn:
      <span id="orderPrice">${(
        productPayed.price * productPayed.quantity
      ).toLocaleString()}</span>
    </p>
  </div>`;
  allNotification.appendChild(notice);
});

// Ch·ªânh s·ª≠a s·ªë l∆∞·ª£ng th√¥ng b√°o
document.getElementById('noti-badge').innerText = numberOfNoti;

// Hi·ªán ra v√† thu g·ªçn thanh th√¥ng b√°o
const showAllNotice = document.getElementById('showAllNotice');
showAllNotice.addEventListener('click', () => {
  const allNotification = document.querySelector('.allNotification');
  if (showAllNotice.textContent === 'Xem t·∫•t c·∫£') {
    allNotification.style.height = '450px';
    showAllNotice.innerText = 'R√∫t g·ªçn th√¥ng b√°o';
  } else if (showAllNotice.textContent === 'R√∫t g·ªçn th√¥ng b√°o') {
    allNotification.style.height = '225px';
    showAllNotice.innerText = 'Xem t·∫•t c·∫£';
  }
});

// x√≥a h·∫øt th√¥ng b√°o
document.getElementById('deleteAllNoti').addEventListener('click', () => {
  document.querySelectorAll('.notification').forEach((notice) => {
    notice.style.display = 'none';
  });
  // x√≥a trong localStorage
  localStorage.removeItem('notificationOfShop');
  document.getElementById('noti-badge').innerText = 0;
});
